[{"/Users/ihowell/Projects/autograder-cse496dl/frontend/src/index.jsx":"1","/Users/ihowell/Projects/autograder-cse496dl/frontend/src/App.jsx":"2","/Users/ihowell/Projects/autograder-cse496dl/frontend/src/reducers/index.js":"3","/Users/ihowell/Projects/autograder-cse496dl/frontend/src/reducers/data.js":"4","/Users/ihowell/Projects/autograder-cse496dl/frontend/src/actions/dataActions.js":"5","/Users/ihowell/Projects/autograder-cse496dl/frontend/src/components/Footer/index.jsx":"6","/Users/ihowell/Projects/autograder-cse496dl/frontend/src/components/Header/index.jsx":"7","/Users/ihowell/Projects/autograder-cse496dl/frontend/src/containers/Dashboard/index.jsx":"8","/Users/ihowell/Projects/autograder-cse496dl/frontend/src/views/Dashboard/index.jsx":"9"},{"size":465,"mtime":1611695475808,"results":"10","hashOfConfig":"11"},{"size":1396,"mtime":1611697067592,"results":"12","hashOfConfig":"11"},{"size":157,"mtime":1611682426320,"results":"13","hashOfConfig":"11"},{"size":1060,"mtime":1611691518238,"results":"14","hashOfConfig":"11"},{"size":1590,"mtime":1611683456713,"results":"15","hashOfConfig":"11"},{"size":719,"mtime":1611683652864,"results":"16","hashOfConfig":"17"},{"size":801,"mtime":1611697079017,"results":"18","hashOfConfig":"11"},{"size":509,"mtime":1611683657019,"results":"19","hashOfConfig":"11"},{"size":2764,"mtime":1611697053337,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"jojiqe",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1tftrt7",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/ihowell/Projects/autograder-cse496dl/frontend/src/index.jsx",[],["43","44"],"/Users/ihowell/Projects/autograder-cse496dl/frontend/src/App.jsx",[],"/Users/ihowell/Projects/autograder-cse496dl/frontend/src/reducers/index.js",[],"/Users/ihowell/Projects/autograder-cse496dl/frontend/src/reducers/data.js",["45","46"],"import Immutable from 'immutable';\n\nimport {\n    FETCH_SCORE_DATA,\n    UPDATE_DATA_TYPE,\n    UPDATE_SCORE_DATA,\n    UPDATE_TITLE,\n} from 'actions/dataActions';\n\nconst compareStrings = (str1, str2) => (str1 > str2) ? 1 : ((str1 < str2) ? -1 : 0);\n\nconst initialState = Immutable.Map({\n    scoreData: Immutable.List(),\n    retrievingData: true,\n    title: \"\",\n    dataType: \"classification\",\n});\n\nconst msToDate = (ms) => {\n    let d = new Date(0);\n    d.setUTCMilliseconds(ms);\n    return d;\n};\n\nconst data = (state = initialState, action) => {\n    switch (action.type) {\n\n    case FETCH_SCORE_DATA:\n        return state.set('retrievingData', true);\n\n    case UPDATE_SCORE_DATA:\n        return state.withMutations(s => {\n            s.set('retrievingData', false);\n            s.set('scoreData', Immutable.fromJS(action.data));\n        });\n\n    case UPDATE_TITLE:\n        return state.set('title', action.title);\n\n    case UPDATE_DATA_TYPE:\n        return state.set('dataType', action.d_type);\n\n    default:\n        return state;\n    }\n};\n\nexport default data;\n","/Users/ihowell/Projects/autograder-cse496dl/frontend/src/actions/dataActions.js",[],"/Users/ihowell/Projects/autograder-cse496dl/frontend/src/components/Footer/index.jsx",[],["47","48"],"/Users/ihowell/Projects/autograder-cse496dl/frontend/src/components/Header/index.jsx",[],"/Users/ihowell/Projects/autograder-cse496dl/frontend/src/containers/Dashboard/index.jsx",[],"/Users/ihowell/Projects/autograder-cse496dl/frontend/src/views/Dashboard/index.jsx",["49"],"import React from \"react\";\n\nimport { Container } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\n\nimport styles from './style.scss';\n\nconst cellClassName = (params) => {\n    if (params.row.err_msg) {\n        return 'error';\n    }\n};\n\nconst columns = [\n    { field: 'name', headerName: 'Team Name', flex: 1 },\n    { field: 'score', headerName: 'Score', type: 'number', width: 120, cellClassName: cellClassName },\n    { field: 'firsts', headerName: 'Firsts', type: 'number', width: 120 },\n    { field: 'seconds', headerName: 'Seconds', type: 'number', width: 140 },\n    { field: 'thirds', headerName: 'Thirds', type: 'number', width: 125 },\n    { field: 'valid_submissions', headerName: 'Valid Submissions', type: 'number', width: 200 },\n];\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { err_msg: '' };\n    }\n\n    componentDidMount() {\n        this.props.fetchScoreData();\n    }\n\n    rowSelected(e) {\n        const data = e.data;\n        this.setState({\n            err_msg: data.err_msg || ''\n        });\n    }\n\n    render() {\n        let i = 0;\n        const scoreData = this.props.scoreData.toJS().map(x => {\n            x['id'] = i++;\n            return x;\n        });\n\n        return (\n            <Container maxWidth=\"lg\">\n                {this.props.retrievingData ?\n                 <div>Loading</div>\n                :\n                 <div style={{ display: 'flex', height: '500px', marginTop: '1rem' }}>\n                     <div style={{ flexGrow: 1 }}>\n                         <DataGrid\n                             rows={scoreData}\n                             columns={columns}\n                             sortModel={[\n                                 {\n                                     field: 'score',\n                                     sort: 'desc',\n                                 },\n                             ]}\n                             onRowSelected={(e) => {this.rowSelected(e);}}\n                         />\n                     </div>\n                 </div>\n                }\n                {\n                    this.state.err_msg !== '' ? (\n                        <Card style={{ marginTop: '1rem' }}>\n                            <CardContent>\n                                <h3>Error Message:</h3>\n                                <pre>\n                                    {this.state.err_msg}\n                                </pre>\n                            </CardContent>\n                        </Card>\n                    ) : null\n                }\n\n            </Container>\n        );\n    }\n}\n\nexport default Dashboard;\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":10,"column":7,"nodeType":"56","messageId":"57","endLine":10,"endColumn":21},{"ruleId":"54","severity":1,"message":"58","line":19,"column":7,"nodeType":"56","messageId":"57","endLine":19,"endColumn":15},{"ruleId":"50","replacedBy":"59"},{"ruleId":"52","replacedBy":"60"},{"ruleId":"54","severity":1,"message":"61","line":9,"column":8,"nodeType":"56","messageId":"57","endLine":9,"endColumn":14},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'compareStrings' is assigned a value but never used.","Identifier","unusedVar","'msToDate' is assigned a value but never used.",["62"],["63"],"'styles' is defined but never used.","no-global-assign","no-unsafe-negation"]